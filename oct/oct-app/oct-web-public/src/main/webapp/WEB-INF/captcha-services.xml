<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean id="captchaService" class="eu.europa.ec.eci.oct.web.captcha.CaptchaServiceImpl">
		<property name="imageCaptchaService" ref="imageCaptchaService" />
	</bean>

	<bean id="imageCaptchaService"
		class="com.octo.captcha.service.multitype.GenericManageableCaptchaService">
		<constructor-arg index="0">
			<ref bean="imageEngine" />
		</constructor-arg>
		<constructor-arg index="1">
			<value>1200</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>180000</value>
		</constructor-arg>
		<constructor-arg index="3">
			<value>100</value>
		</constructor-arg>
	</bean>

	<bean id="imageEngine" class="com.octo.captcha.engine.GenericCaptchaEngine">
		<constructor-arg index="0">
			<list>
				<ref bean="captchaFactory" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="captchaFactory" class="com.octo.captcha.image.gimpy.GimpyFactory">
		<constructor-arg>
			<ref bean="wordgen" />
		</constructor-arg>
		<constructor-arg>
			<ref bean="wordtoimage" />
		</constructor-arg>
	</bean>

	<bean id="wordgen"
		class="com.octo.captcha.component.word.wordgenerator.RandomWordGenerator">
		<constructor-arg>
			<value>abcdfghijkmnpqrstuvwxyz23456789</value>
		</constructor-arg>
	</bean>

	<bean id="wordtoimage"
		class="com.octo.captcha.component.image.wordtoimage.DeformedComposedWordToImage">
		<!-- text font -->
		<constructor-arg index="0">
			<ref bean="fontGenRandom" />
		</constructor-arg>
		<!-- image background -->
		<constructor-arg index="1">
			<ref bean="backGenGradient" />
		</constructor-arg>
		<!-- text -->
		<constructor-arg index="2">
			<ref bean="paster" />
		</constructor-arg>
		<!-- background deformation -->
		<constructor-arg index="3">
			<ref bean="none" />
		</constructor-arg>
		<!-- text deformation -->
		<constructor-arg index="4">
			<ref bean="smearDef" />
		</constructor-arg>
		<!-- final deformation -->
		<constructor-arg index="5">
			<ref bean="waterDef" />
		</constructor-arg>
	</bean>


	<bean id="fontGenRandom"
		class="com.octo.captcha.component.image.fontgenerator.RandomFontGenerator">
		<!-- font size min -->
		<constructor-arg index="0">
			<value>36</value>
		</constructor-arg>
		<!-- font size max -->
		<constructor-arg index="1">
			<value>42</value>
		</constructor-arg>
		<constructor-arg index="2">
			<list>
				<ref bean="fontArial" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="fontArial" class="java.awt.Font">
		<constructor-arg index="0">
			<value>Arial</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>0</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>10</value>
		</constructor-arg>
	</bean>

	<bean id="otherColor" class="java.awt.Color">
		<constructor-arg index="0">
			<value type="java.lang.Integer">255</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value type="java.lang.Integer">255</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value type="java.lang.Integer">255</value>
		</constructor-arg>
	</bean>
	<bean id="blueColor" class="java.awt.Color">
		<constructor-arg index="0">
			<value type="java.lang.Integer">0</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value type="java.lang.Integer">128</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value type="java.lang.Integer">255</value>
		</constructor-arg>
	</bean>

	<bean id="backGenGradient"
		class="com.octo.captcha.component.image.backgroundgenerator.GradientBackgroundGenerator">
		<!-- width -->
		<constructor-arg index="0">
			<value>200</value>
		</constructor-arg>
		<!-- height -->
		<constructor-arg index="1">
			<value>60</value>
		</constructor-arg>
		<!-- first Color -->
		<constructor-arg
			type="com.octo.captcha.component.image.color.ColorGenerator" index="2">
			<bean class="com.octo.captcha.component.image.color.SingleColorGenerator">
				<constructor-arg index="0" type="java.awt.Color">
					<ref bean="blueColor" />
				</constructor-arg>
			</bean>
		</constructor-arg>
		<!-- second Color -->
		<constructor-arg
			type="com.octo.captcha.component.image.color.ColorGenerator" index="3">
			<bean class="com.octo.captcha.component.image.color.SingleColorGenerator">
				<constructor-arg index="0" type="java.awt.Color">
					<ref bean="otherColor" />
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>

	<bean id="paster"
		class="com.octo.captcha.component.image.textpaster.RandomTextPaster ">
		<!-- word min length -->
		<constructor-arg type="java.lang.Integer" index="0">
			<value>4</value>
		</constructor-arg>
		<!-- word max length -->
		<constructor-arg type="java.lang.Integer" index="1">
			<value>4</value>
		</constructor-arg>
		<!-- word color -->
		<constructor-arg
			type="com.octo.captcha.component.image.color.ColorGenerator" index="2">
			<ref bean="colorGenRandomAlpha" />
		</constructor-arg>
		<constructor-arg index="3">
			<value>true</value>
		</constructor-arg>
	</bean>

	<bean id="colorGenRandomAlpha"
		class="com.octo.captcha.component.image.color.RandomRangeColorGenerator">
		<!-- red range -->
		<constructor-arg index="0">
			<list>
				<value>0</value>
				<value>128</value>
			</list>
		</constructor-arg>
		<!-- green range -->
		<constructor-arg index="1">
			<list>
				<value>0</value>
				<value>128</value>
			</list>
		</constructor-arg>
		<!-- blue range -->
		<constructor-arg index="2">
			<list>
				<value>0</value>
				<value>128</value>
			</list>
		</constructor-arg>
		<!-- alpha range -->
		<constructor-arg index="3">
			<list>
				<value>190</value>
				<value>220</value>
			</list>
		</constructor-arg>
	</bean>

	<!-- Deformations -->
	<bean id="cristalDef"
		class="com.octo.captcha.component.image.deformation.ImageDeformationByFilters">
		<constructor-arg index="0">
			<list>
				<ref bean="crystal" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="crystal" class="com.jhlabs.image.CrystalizeFilter">
		<property name="scale">
			<value>0.5</value>
		</property>
		<property name="gridType">
			<value>1</value>
		</property>
		<property name="fadeEdges">
			<value>false</value>
		</property>
		<property name="edgeThickness">
			<value>0.1</value>
		</property>
		<property name="randomness">
			<value>1.0</value>
		</property>
	</bean>

	<bean id="waterDef"
		class="com.octo.captcha.component.image.deformation.ImageDeformationByFilters">
		<constructor-arg index="0">
			<list>
				<ref bean="water" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="water" class="com.jhlabs.image.WaterFilter">
		<property name="amplitude">
			<value>2</value>
		</property>
		<property name="antialias">
			<value>true</value>
		</property>
		<property name="wavelength">
			<value>30</value>
		</property>
	</bean>

	<bean id="smearDef"
		class="com.octo.captcha.component.image.deformation.ImageDeformationByFilters">
		<constructor-arg index="0">
			<list>
				<ref bean="smear" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="smear" class="com.jhlabs.image.SmearFilter">
		<property name="shape">
			<value>0</value>
		</property>
		<property name="distance">
			<value>15</value>
		</property>
		<property name="density">
			<value>0.3</value>
		</property>
		<property name="scatter">
			<value>0.5</value>
		</property>
		<property name="angle">
			<value>0.1</value>
		</property>
		<property name="mix">
			<value>0.6</value>
		</property>
		<property name="fadeout">
			<value>2</value>
		</property>
	</bean>
	<!-- Deformations -->

	<bean id="none"
		class="com.octo.captcha.component.image.deformation.ImageDeformationByFilters">
		<constructor-arg index="0">
			<null />
		</constructor-arg>
	</bean>
</beans>